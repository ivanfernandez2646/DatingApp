{"version":3,"sources":["./src/app/_forms/number-input/number-input.component.ts","./src/app/_forms/number-input/number-input.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/_models/user-params.ts","./src/app/_models/generic-params.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/_services/presence-hub.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/admin/admin-user-management/admin-user-management.component.ts","./src/app/admin/admin-user-management/admin-user-management.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_forms/datepicker-input/datepicker-input.component.ts","./src/app/_forms/datepicker-input/datepicker-input.component.html","./src/app/_modules/shared.module.ts","./src/app/_services/member.service.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_models/message-params.ts","./src/app/_services/admin.service.ts","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/_models/create-message.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_directives/show-admin-panel.directive.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/_services/message-hub.service.ts","./src/app/_modals/admin-edit-roles/admin-edit-roles.component.ts","./src/app/_modals/admin-edit-roles/admin-edit-roles.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/pagination-helper.ts","./src/app/_models/like-params.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/app-routing.module.ts","./src/app/_guards/prevent-access-admin-panel.guard.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-number-input',\n  templateUrl: './number-input.component.html',\n  styleUrls: ['./number-input.component.css']\n})\nexport class NumberInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: string = \"number\";\n  @Input() margin: string;\n  @Input() style: string;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n}\n","<div class=\"form-group\"> \n    <label class=\"{{'lead ' + margin}}\">{{label}}</label>\n    <input \n    [formControl]=\"ngControl.control\"\n    type=\"{{type}}\" \n    class=\"{{'form-control ' + margin}}\"\n    [placeholder]=\"label\"\n    [style]=\"style\"\n    required\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\">\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = \"https://localhost:5001/api/\";\n  validationErrors: string[];\n\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get400BadRequest(){\n    this.httpClient.get(this.baseUrl + \"buggy/bad-request\").subscribe(res => {\n      console.log(res);\n    }, error => {\n      //console.log(error);\n    });\n  }\n\n  get401Unauthorized(){\n    this.httpClient.get(this.baseUrl + \"buggy/auth\").subscribe(res => {\n      console.log(res);\n    }, error => {\n      //console.log(error);\n    });\n  }\n\n  get404NotFound(){\n    this.httpClient.get(this.baseUrl + \"buggy/not-found\").subscribe(res => {\n      //console.log(res);\n    }, error => {\n      //console.log(error);\n    });\n  }\n\n  get500ServerError(){\n    this.httpClient.get(this.baseUrl + \"buggy/server-error\").subscribe(res => {\n      console.log(res);\n    }, error => {\n      //console.log(error);\n    });\n  }\n\n  get400BadRequestValidation(){\n    this.httpClient.post(this.baseUrl + \"account/register\", {}).subscribe(res => {\n      //console.log(res);\n    }, error => {\n      this.validationErrors = error;\n    });\n  }\n}\n","<ng-container>\n    <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"get400BadRequest()\">400 Bad Request</button>\n    <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"get401Unauthorized()\">401 Unauthorized</button>\n    <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"get404NotFound()\">404 Not Found</button>\n    <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"get500ServerError()\">500 Server Error</button>\n    <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"get400BadRequestValidation()\">400 Bad Request (Validation)</button>\n</ng-container>\n\n<div class=\"container mt-5\">\n    <ul>\n        <li *ngFor=\"let validationError of this.validationErrors\" class=\"text-secondary\">{{validationError}}</li>\n    </ul>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { RegisterUser } from '../_models/register-user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Input() usersFromHomeComponent: any;\n  @Output() closeRegisterEvent = new EventEmitter();\n  //userToRegisterForm: any = {};\n\n  registerForm: FormGroup;\n  maxDate: Date;\n\n  constructor(private accountService: AccountService, private toastr: ToastrService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear()-18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {validator: this.passwordCorrectFromConfirmPasswordField});\n  }\n\n  passwordCorrectFromConfirmPasswordField: ValidatorFn = (fg: FormGroup) => {\n    if(fg.get(\"password\").value == fg.get(\"confirmPassword\").value)\n      return null;\n    \n    fg.get(\"confirmPassword\").setErrors({ matchPassword: true });\n    return;\n  }\n\n  registerUser() {\n    // const userToRegister: RegisterUser = \n    // {\n    //   userName:this.userToRegisterForm.username, \n    //   password:this.userToRegisterForm.password\n    // };\n    // const userToRegister: RegisterUser = \n    // {\n    //   userName:this.registerForm.get(\"username\").value, \n    //   password:this.registerForm.get(\"password\").value\n    // };\n\n    this.accountService.registerUser(this.registerForm.value).subscribe((res) => {\n      this.toastr.success(\"Register successful\");\n      this.cancel();\n    }, error => {\n      this.toastr.error(error.error);\n      console.log(error);\n    });\n  }\n\n  cancel() {\n    this.closeRegisterEvent.emit(false);\n  }\n}\n","<div class=\"p text-center\">\n    <h2>Sign in</h2>\n    <hr/>\n    <!-- 1er método: ngModel -->\n    <!-- <div class=\"mt-4\" style=\"margin: 0 auto; width: 50%;\">\n        <form #registerForm ngNativeValidate>\n            <div class=\"form-group\">\n                <label class=\"lead\" for=\"inputUsername\">Username</label>\n                <input \n                id=\"inputUsername\"\n                name=\"inputUsername\"\n                [(ngModel)]=\"userToRegisterForm.username\"\n                type=\"text\" \n                class=\"form-control\" \n                placeholder=\"Username\"\n                required\n                autofocus>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"lead\" for=\"inputPassword\">Password</label>\n                <input \n                    id=\"inputPassword\" \n                    name=\"inputPassword\"\n                    [(ngModel)]=\"userToRegisterForm.password\"\n                    type=\"password\" \n                    class=\"form-control\" \n                    placeholder=\"Password\"\n                    required>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"lead\" for=\"inputPassword\">Repeat password</label>\n                <input \n                    id=\"inputRepeatPassword\"\n                    name=\"inputRepeatPassword\" \n                    [(ngModel)]=\"userToRegisterForm.repeatPassword\"\n                    type=\"password\" \n                    class=\"form-control\" \n                    placeholder=\"Repeat password\"\n                    required>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"lead\">Who is your favourite user??</label>\n                <select class=\"form-control\" name=\"selectUser\" id=\"selectUser\">\n                    <option *ngFor=\"let user of usersFromHomeComponent\">{{user.userName}}</option>\n                </select>\n            </div>\n            <div class=\"text-center\">\n                <button type=\"submit\" class=\"btn btn-secondary btn-lg mr-2\" \n                    (click)=\"registerForm.checkValidity() ? registerUser() : null\">Register</button>\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\" \n                    (click)=\"cancel()\">Cancel</button>\n            </div>\n        </form>\n    </div> -->\n\n    <!-- 2º método: reactive forms boilerplate -->\n    <!-- <div class=\"mt-4\" style=\"margin: 0 auto; width: 50%;\">\n        <form [formGroup]='registerForm'>\n            <div class=\"form-group\">\n                <label class=\"lead\" for=\"inputUsername\">Username</label>\n                <input \n                id=\"inputUsername\"\n                formControlName=\"username\"\n                type=\"text\" \n                class=\"form-control\" \n                placeholder=\"Username\"\n                required\n                autofocus\n                [class.is-invalid]=\"registerForm.get('username').touched && registerForm.get('username').invalid\">\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('password').getError('required')\">\n                    <p>Username is required</p>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"lead\" for=\"inputPassword\">Password</label>\n                <input \n                    id=\"inputPassword\" \n                    formControlName=\"password\"\n                    type=\"password\" \n                    class=\"form-control\" \n                    placeholder=\"Password\"\n                    required\n                    [class.is-invalid]=\"registerForm.get('password').touched && registerForm.get('password').invalid\">\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('password').getError('required')\">\n                    <p>Password is required</p>\n                </div>\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('password').getError('minlength')\">\n                    <p>Password must be 4 characters at least</p>\n                </div>\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('password').getError('maxlength')\">\n                    <p>Password can be 8 characters at most</p>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"lead\" for=\"inputPassword\">Confirm password</label>\n                <input \n                    id=\"inputConfirmPassword\"\n                    formControlName=\"confirmPassword\"\n                    type=\"password\" \n                    class=\"form-control\" \n                    placeholder=\"Repeat password\"\n                    required\n                    [class.is-invalid]=\"registerForm.get('confirmPassword').touched && registerForm.get('confirmPassword').invalid\">\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('confirmPassword').getError('required')\">\n                    <p>Confirm password is required</p>\n                </div>\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('confirmPassword').getError('minlength')\">\n                    <p>Confirm password must be 4 characters at least</p>\n                </div>\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('confirmPassword').getError('maxlength')\">\n                    <p>Confirm password can be 8 characters at most</p>\n                </div>\n                <div class=\"invalid-feedback text-left\" *ngIf=\"this.registerForm.get('confirmPassword').getError('matchError')\">\n                    <p>Confirm password doesn't match password field</p>\n                </div>\n            </div>\n            <div class=\"text-center\">\n                <button type=\"submit\" class=\"btn btn-secondary btn-lg mr-2\" \n                    [disabled]=\"this.registerForm.invalid\"\n                    (click)=\"registerUser()\">Register</button>\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\" \n                    (click)=\"cancel()\">Cancel</button>\n            </div>\n        </form>\n        <div class=\"mt-3\">\n            <p>Form value: {{registerForm.value | json}}</p>\n            <p>Form status: {{registerForm.status | json}}</p>\n        </div>\n    </div> -->\n\n    <!-- 3er método: clean code (ControlValueAccessor) -->\n    <div class=\"mt-4\" style=\"margin: 0 auto; width: 50%;\">\n        <form [formGroup]='registerForm'>\n            <div class=\"form-group\">\n                <label class=\"lead mr-4\">I'm a</label>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" formControlName=\"gender\" value=\"male\" checked>\n                    <label class=\"form-check-label\">\n                        Man\n                    </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" formControlName=\"gender\" value=\"female\">\n                    <label class=\"form-check-label\">\n                        Woman\n                    </label>\n                </div>\n        </div>\n            <app-text-input [formControl]=\"registerForm.controls['username']\" [label]=\"'Username'\"></app-text-input>\n            <app-text-input [formControl]=\"registerForm.controls['knownAs']\" [label]=\"'Known as'\"></app-text-input>\n            <app-datepicker-input [formControl]=\"registerForm.controls['dateOfBirth']\" [label]=\"'Date of birth'\" [maxDate]=\"maxDate\"></app-datepicker-input>\n            <app-text-input [formControl]=\"registerForm.controls['city']\" [label]=\"'City'\"></app-text-input>\n            <app-text-input [formControl]=\"registerForm.controls['country']\" [label]=\"'Country'\"></app-text-input>\n            <app-text-input [formControl]=\"registerForm.controls['password']\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n            <app-text-input [formControl]=\"registerForm.controls['confirmPassword']\" [label]=\"'Confirm password'\" [type]=\"'password'\"></app-text-input>\n            <div class=\"text-center\">\n                <button type=\"submit\" class=\"btn btn-secondary btn-lg mr-2\" \n                    [disabled]=\"this.registerForm.invalid\"\n                    (click)=\"registerUser()\">Register</button>\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\" \n                    (click)=\"cancel()\">Cancel</button>\n            </div>\n        </form>\n        <!-- <div class=\"mt-3\">\n            <p>Form value: {{registerForm.value | json}}</p>\n            <p>Form status: {{registerForm.status | json}}</p>\n        </div> -->\n    </div>\n</div>\n","import { formatCurrency } from '@angular/common';\nimport { OnDestroy, ViewChildren } from '@angular/core';\nimport { QueryList } from '@angular/core';\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TabDirective } from 'ngx-bootstrap/tabs';\nimport { ToastrService } from 'ngx-toastr';\nimport { CreateMessage } from 'src/app/_models/create-message';\nimport { Message } from 'src/app/_models/message';\nimport { MessageHubService } from 'src/app/_services/message-hub.service';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('scrollBar', {static: true}) scrollBar: ElementRef;\n  @ViewChild('inputMessage', {static: true}) inputMessage: ElementRef;\n  @ViewChildren('messageContainers') messageContainers: QueryList<ElementRef>;\n  @ViewChild('sendMessageForm') sendMessageForm: NgForm;\n  @Input() recipientUsername: string;\n\n  createMessage: CreateMessage;\n  messages: Message[];\n  currentMessagesLengthContainer: number = undefined;\n\n  constructor(public messageHubService: MessageHubService) {\n    this.createMessage = new CreateMessage();\n  }\n\n  ngOnInit(): void {\n    this.createMessage.recipientUsername = this.recipientUsername;\n    this.messageHubService.onCreateHubConnection(this.recipientUsername);\n    this.messageHubService.message$.subscribe(res => {\n      this.messages = res;\n      this.createMessage.content = \"\";\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.messageContainers.changes.subscribe((list: QueryList<ElementRef>) => {\n      if(this.currentMessagesLengthContainer == undefined){\n        this.currentMessagesLengthContainer = list.length;\n        this.scrollDownMessages();\n      }else{\n        if(this.currentMessagesLengthContainer < list.length){\n          this.scrollDownMessages();\n          this.currentMessagesLengthContainer = list.length;\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.messageHubService.onStopHubConnection();\n  }\n\n  sendMessage(){\n    // this.messageService.sendMessage(this.createMessage).subscribe(res => {\n    //   this.messages.push(res);\n    //   this.sendMessageForm.reset();\n    // }, error => {\n    //   this.toastr.error(error);\n    // })\n    this.messageHubService.hubConnection.invoke(\"OnSendMessage\", \n      this.createMessage.content);\n  }\n\n  scrollDownMessages(){\n    this.scrollBar.nativeElement.scrollTo(0, this.scrollBar.nativeElement.scrollHeight);\n  }\n}\n","\n<div class=\"messagesWrap bg-light\">\n    <div class=\"row\">\n        <div class=\"mt-3\">\n            <h2 *ngIf=\"!messages\" class=\"mt-3\">Loading messages...</h2>\n            <h2 *ngIf=\"messages.length == 0\" class=\"mt-3\">No messages!!</h2>\n        </div>\n        <div class=\"scrollbar scrollbar-secondary\" #scrollBar>\n            <ul class=\"pl-0 listMessages\" *ngIf=\"messages.length > 0\">\n                <li *ngFor=\"let message of messages\" class=\"message row d-flex\" #messageContainers>\n                    <div class=\"col-11\">\n                        <div class=\"messageBody\">\n                            <span style=\"font-size: 12px;\">\n                                <i class=\"fa fa-clock-o\"></i>\n                                <span class=\"dataRead\">\n                                    {{message.messageSent | timeago}}\n                                    <span *ngIf=\"message.dataRead && message.senderUsername != recipientUsername\" \n                                        style=\"color: green;\">(read {{message.dataRead | timeago}})</span>\n                                    <span *ngIf=\"!message.dataRead && message.senderUsername != recipientUsername\" \n                                        style=\"color: red;\">(unread)</span>\n                                </span>\n                            </span>\n                            <p><b>{{message.content}}</b></p>   \n                        </div>\n                    </div>\n                    <div class=\"col-1 ml-auto\">\n                        <img src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.senderUsername}}\"\n                        class=\"rounded-circle messagePhoto\">\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"row\">\n        <form class=\"form col-12\" #sendMessageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\">\n            <div class=\"input-group p-3\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Type a message to {{recipientUsername | titlecase}}\"\n                    [(ngModel)]=\"createMessage.content\"\n                    name=\"content\"\n                    (focus)=\"scrollDownMessages()\"\n                    required\n                    #inputMessage>\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-secondary\" type=\"submit\" [disabled]=\"!sendMessageForm.valid\">\n                        <i class=\"fa fa-paper-plane\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { GenericParams } from \"./generic-params\";\r\nimport { User } from \"./user\";\r\n\r\nexport class UserParams extends GenericParams{\r\n    minAge: number = 18;\r\n    maxAge: number = 120;\r\n    gender: string;\r\n    currentUsername: string;\r\n    orderBy: string = \"lastActive\";\r\n\r\n    constructor(user: User){\r\n        //Gender by default is the opposite\r\n        super();\r\n        this.gender = (user.gender == \"male\" ? \"female\" : \"male\");\r\n        this.currentUsername = user.userName;\r\n    }\r\n}\r\n","export class GenericParams {\r\n    pageNumber: number = 1;\r\n    pageSize: number = 10;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/_services/account.service';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(public accountService: AccountService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container>\n    <h1 class=\"text-secondary\">Not Found</h1>\n    <button class=\"btn-primary btn-info mr-2\" routerLink=\"/\">Return to home page</button>\n    <button class=\"btn-primary btn-info\" routerLink=\"/members\" \n        *ngIf=\"(this.accountService.currentUser$ | async)\">Return to matches</button>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { RegisterUser } from '../_models/register-user';\nimport { User } from '../_models/user';\nimport { PresenceHubService } from './presence-hub.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  url = environment.apiRoute;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private httpClient: HttpClient, \n    private presenceService: PresenceHubService) { }\n\n  login(model: User){\n    return this.httpClient.post(this.url + \"account/login\", model).pipe(\n      map((response: User) => {\n        const user = response;\n        if(user){\n          this.setCurrentUser(user);\n        }\n      })\n    );\n  }\n\n  registerUser(registerUser: RegisterUser){\n    return this.httpClient.post(this.url + \"account/register\", registerUser).pipe(\n      map((response: User) => {\n        const user = response;\n        if(user){\n          this.setCurrentUser(user);\n        }\n      })\n    );\n  }\n  \n  setCurrentUser(user: User){\n    user.role = JSON.parse(atob(user.token.split(\".\")[1])).role;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    this.currentUserSource.next(user);\n    this.presenceService.onCreateHubConnection(user);\n  }\n\n  logout(){\n    localStorage.removeItem(\"user\");\n    this.currentUserSource.next(null);\n    this.presenceService.onStopHubConnection();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceHubService {\n  url = environment.hubRoute;\n\n  private hubConnection: HubConnection\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService,\n    private router: Router) { }\n\n  onCreateHubConnection(user: User){\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"presence/\", {accessTokenFactory: () => { return user.token }})\n      .withAutomaticReconnect()\n      .build();\n    \n    this.hubConnection\n      .start()\n      .catch(err => console.log(err));\n\n    this.hubConnection\n      .on(\"UserIsLogged\", (res) => {\n        this.toastr.success(res + \" is connected\");\n      });\n\n    this.hubConnection\n      .on(\"UserIsLogout\", (res) => {\n        this.toastr.error(res + \" is disconnected\");\n      });\n    \n    this.hubConnection\n      .on(\"GetOnlineUsers\", (res) => {\n        this.onlineUsersSource.next([...res]);\n      });\n\n    this.hubConnection\n      .on(\"NewMessageReceived\", ({username, knownAs}) => {\n        this.toastr.info(\"New message received from \" + knownAs)\n          .onTap\n          .subscribe(() => {\n            this.router.navigated = false;\n            this.router.navigateByUrl(\"/members/\" + username + \"?tab=3\")\n          });\n      });\n  }\n\n  onStopHubConnection(){\n    this.hubConnection\n      .stop()\n      .catch(err => console.log(err));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n  errorStringToTemplate: string = \" Internal server error - refreshing the page will make the error disapper!\";\n\n  constructor(private router: Router) {\n    const navigation = router.getCurrentNavigation();\n    this.error = navigation.extras?.state?.error;\n   }\n\n  ngOnInit(): void {\n    console.log(this.error)\n  }\n\n}\n","<ng-container *ngIf=\"!this.error\">\n    <h4>{{this.errorStringToTemplate}}</h4>\n</ng-container>\n<ng-container *ngIf=\"this.error\">\n    <h4>{{this.error.statusCode + this.errorStringToTemplate}}</h4>\n    <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">\n        Note: If you are seeing this then Angular is probably not to blame\n    </p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examinte the request URL - make sure it is correct</li>\n    </ol>\n    <code>\n        {{error.details}}\n    </code>\n</ng-container>","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  countLoadingAnimation = 0;\n\n  constructor(private spinner: NgxSpinnerService) { }\n\n  showLoadingAnimation(){\n    this.countLoadingAnimation++;\n    this.spinner.show(undefined, {\n      type: \"fire\",\n      size: \"large\",\n      bdColor: \"rgba(255, 255, 255, 0.5)\",\n      color: \"#F3969A\",\n    });\n  }\n\n  hideLoadingAnimation(){\n    this.countLoadingAnimation--;\n    if(this.countLoadingAnimation <= 0){\n      this.countLoadingAnimation = 0;\n      this.spinner.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { RegisterUser } from '../_models/register-user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode: boolean = false;\n  users: any;\n\n  constructor(private httpClient: HttpClient,private accountService: AccountService) { }\n\n  ngOnInit(): void {\n  }\n\n  toggleRegisterMode(){\n    this.registerMode = !this.registerMode;\n  }\n\n  closeRegisterForm(event: boolean){\n    this.registerMode = event;\n  }\n}\n","<div *ngIf=\"!registerMode\" class=\"container mt-5\">\n    <div class=\"p text-center\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\n        <div class=\"text-center\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"toggleRegisterMode()\">Register</button>\n            <button type=\"button\" class=\"btn btn-primary btn-lg\">Login</button>\n        </div>\n    </div>\n</div>\n\n<!-- REGISTER -->\n<div *ngIf=\"registerMode\" class=\"container mt-5\">\n    <app-register [usersFromHomeComponent]=\"users\" (closeRegisterEvent)=\"closeRegisterForm($event)\"></app-register>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AdminEditRolesComponent } from 'src/app/_modals/admin-edit-roles/admin-edit-roles.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-admin-user-management',\n  templateUrl: './admin-user-management.component.html',\n  styleUrls: ['./admin-user-management.component.css']\n})\nexport class AdminUserManagementComponent implements OnInit {\n  userRoles: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService,\n    private bsModalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.loadUserWithRoles();\n  }\n\n  loadUserWithRoles(){\n    this.adminService.getUserWithRoles().subscribe(res => {\n      this.userRoles = res;\n    })\n  }\n\n  openModalWithComponent(userRole: Partial<User>) {\n    const initialState = {\n      userRole: JSON.parse(JSON.stringify(userRole))\n    };\n    this.bsModalRef = this.bsModalService.show(AdminEditRolesComponent, {initialState});\n    this.bsModalRef.content?.closeModalUserRole.subscribe(res => {\n      if(JSON.stringify(userRole.role.sort()) !== JSON.stringify(res.role.sort())){\n        this.adminService.editRoles(res).subscribe(res => {\n          userRole.role = [...res];\n        });\n      }\n    });\n  }\n}\n","<ng-container *ngIf=\"userRoles\">\n    <div class=\"row\">\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th>Username</th>\n                    <th>Active roles</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let userRole of userRoles\">\n                    <td>{{userRole.userName}}</td>\n                    <td>{{userRole.role?.join(\", \") | titlecase}}</td>\n                    <td>\n                        <button class=\"btn btn-info\" (click)=\"openModalWithComponent(userRole)\">Edit Roles</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</ng-container>","import { Member } from \"./member\"\r\n\r\nexport interface PaginationHeader{\r\n    pageNumber: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    body: T;\r\n    pagination: PaginationHeader;\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiRoute: \"https://localhost:5001/api/\",\n  hubRoute: \"https://localhost:5001/hub/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n\n    if(currentUser){\n      request = request.clone({\n        setHeaders: {\n          \"Authorization\": \"Bearer \" + JSON.parse(localStorage.getItem(\"user\"))?.token\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { MessageParams } from '../_models/message-params';\nimport { PaginationHeader } from '../_models/pagination';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  paginationHeader: PaginationHeader;\n  messageParams: MessageParams;\n\n  constructor(private messageService: MessageService) {\n  }\n\n  ngOnInit(): void {\n    this.messageParams = new MessageParams();\n    this.loadMessages();\n  }\n\n  loadMessages(){\n    this.messageService.getMessages(this.messageParams).subscribe(res => {\n      this.messages = res.body;\n      this.messageParams.pageNumber = res.pagination.pageNumber;\n      this.messageParams.pageSize = res.pagination.pageSize;\n      this.paginationHeader = res.pagination;\n    });\n  }\n\n  pageChanged(event: any){\n    this.messageParams.pageNumber = event.page;\n    this.loadMessages();\n  }\n  \n  deleteMessage(event: any, messageId: number){\n    event.stopPropagation();\n    this.messageParams.messageId = messageId.toString();\n    this.messageService.deleteMessage(this.messageParams).subscribe((res) => {\n      this.messages = res.body;\n      this.messageParams.pageNumber = res.pagination.pageNumber;\n      this.messageParams.pageSize = res.pagination.pageSize;\n      this.paginationHeader = res.pagination;\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"btn-group\" \n        btnRadioGroup\n        [(ngModel)]=\"messageParams.container\" \n        (click)=\"loadMessages()\">\n        <button class=\"btn btn-info\"\n            btnRadio=\"unread\">\n            <i class=\"fa fa-envelope\"></i>\n            Unread\n        </button>\n        <button class=\"btn btn-info\" \n            btnRadio=\"inbox\">\n            <i class=\"fa fa-envelope-open\"></i>\n            Inbox\n        </button>\n        <button class=\"btn btn-info\"\n            btnRadio=\"outbox\">\n            Outbox\n        </button>\n    </div>\n</div>\n<div class=\"row mt-4\" *ngIf=\"messages && messages?.length == 0\">\n    <h2>No messages</h2>\n</div> \n<div class=\"row mt-4\" *ngIf=\"messages?.length > 0\">\n    <div class=\"col-12\">\n        <table class=\"table table-hover\" style=\"width:100%\">\n            <thead>\n                <tr>\n                    <th style=\"width: 40%\">Message</th>\n                    <th style=\"width: 20%\">From / To</th>\n                    <th style=\"width: 20%\">Sent / Received</th>\n                    <th style=\"width: 20%\"></th>\n                  </tr>\n            </thead>\n            <tbody>\n                <tr class=\"rowMessage\" *ngFor=\"let message of messages\"\n                routerLink='{{messageParams.container == \"outbox\" \n                ? \"/members/\" + message.recipientUsername \n                : \"/members/\" + message.senderUsername}}'\n                [queryParams]=\"{tab: 3}\">\n              <td>{{message.content}}</td>\n              <td>\n                  <span>\n                      <img src=\"{{message.senderPhotoUrl}}\" \n                        alt=\"{{message.senderUsername}}\" \n                        class=\"rounded-circle\"\n                        style=\"max-height: 50px;\">\n                      <span class=\"ml-2\"><b>{{message.senderUsername | titlecase}}</b></span>\n                  </span>\n              </td>\n              <td>{{message.messageSent | timeago}}</td>\n              <td>\n                  <button class=\"btn btn-danger\" (click)=\"deleteMessage($event, message.id)\">Delete</button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n    </div>\n</div>\n<div class=\"row mt-3\" *ngIf=\"paginationHeader && messages?.length > 0\">\n    <div class=\"col d-flex justify-content-center\">\n        <pagination \n            [totalItems]=\"paginationHeader.totalCount\" \n            [itemsPerPage]=\"paginationHeader.pageSize\"\n            [(ngModel)]=\"paginationHeader.pageNumber\"\n            (pageChanged)=\"pageChanged($event)\"></pagination>\n    </div>\n</div>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig, DatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-datepicker-input',\n  templateUrl: './datepicker-input.component.html',\n  styleUrls: ['./datepicker-input.component.css']\n})\nexport class DatepickerInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: string = \"text\";\n  @Input() maxDate: Date;\n\n  datePickerConfig: BsDatepickerConfig;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.setConfigDatePicker();\n  }\n\n  setConfigDatePicker(): void {\n    this.datePickerConfig = new BsDatepickerConfig();\n    this.datePickerConfig.dateInputFormat = \"DD/MM/YYYY\";\n    this.datePickerConfig.containerClass = \"theme-red\";\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n}\n","<div class=\"form-group\"> \n    <label class=\"lead\">{{label}}</label>\n    <input \n    [formControl]=\"ngControl.control\"\n    type=\"{{type}}\" \n    class=\"form-control\" \n    placeholder=\"{{label}}\"\n    required\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    bsDatepicker\n    [maxDate]=\"maxDate\"\n    [bsConfig]=\"datePickerConfig\">\n    <div class=\"invalid-feedback text-left\" *ngIf=\"ngControl.errors?.required && ngControl.touched\">\n        <p>{{label}} is required</p>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: \"toast-bottom-right\",\n      preventDuplicates: true\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { Photo } from '../_models/Photo';\nimport { PaginatedResult, PaginationHeader } from '../_models/pagination';\nimport { UserParams } from '../_models/user-params';\nimport { AccountService } from './account.service';\nimport { User } from '../_models/user';\nimport { LikeParams } from '../_models/like-params';\nimport { GenericParams } from '../_models/generic-params';\nimport { getPaginatedResult, getPaginationHeaders } from './pagination-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MemberService {\n  url = environment.apiRoute;\n  cachedResults = new Map<string, PaginatedResult<Member[]>>();\n  userParams: UserParams;\n  user: User;\n\n  constructor(private httpClient: HttpClient, private accountService: AccountService) {\n    accountService.currentUser$.pipe(take(1)).subscribe(res => this.user = res);\n    this.userParams = new UserParams(this.user);\n  }\n  \n  getMembers(userParams: UserParams){\n    let filterKey = Object.values(userParams).join(\"-\");\n    if(this.cachedResults.has(filterKey)){\n      return of(this.cachedResults.get(filterKey));  \n    }\n    \n    let params = getPaginationHeaders(userParams);\n    params = this.getMembersHeaders(params, userParams);\n\n    return getPaginatedResult<Member[]>(this.url + \"users\", this.httpClient, params).pipe(\n      map(paginatedResult => {\n        this.cachedResults.set(filterKey, paginatedResult);\n        return paginatedResult;\n      })\n    );\n  }\n\n  getMember(username: string){\n    const cachedResultFlat = [...this.cachedResults.values()]\n      .flat()\n      .reduce((prev, curr) => curr.body, []);\n\n    const foundedMember = cachedResultFlat.find((m: Member) => m.userName == username);\n    if(foundedMember)\n      return of(foundedMember);\n\n    return this.httpClient.get<Member>(this.url + \"users/\" + username);\n  }\n\n  updateMember(member: Member){\n    return this.httpClient.put(this.url + \"users\", member);\n  }\n\n  setMainPhoto(photoId: number){\n    return this.httpClient.put(this.url + \"users/set-main-photo/\" + photoId, {}).pipe(\n      map((res: Photo) => {\n        return res;\n      })\n    );\n  }\n\n  deletePhoto(photoId: number){\n    return this.httpClient.delete(this.url + \"users/delete-photo/\" + photoId);\n  }\n\n  addLike(username: string){\n    return this.httpClient.post(this.url + \"likes/\" + username, {});\n  }\n\n  getUserLikes(likeParams: LikeParams){\n    let params = getPaginationHeaders(likeParams);\n    params = params.append('predicate', likeParams.predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.url + \"likes\", this.httpClient, params);\n  }\n\n  private getMembersHeaders(params: HttpParams, userParams: UserParams): HttpParams{\n    params = params.append('currentUsername', userParams.currentUsername.toString());\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('orderBy', userParams.orderBy.toString());\n\n    if (userParams.gender != \"both\")\n      params = params.append('gender', userParams.gender.toString());\n\n    return params; \n  }\n\n  //Properties getters and setters\n  setUserParams(userParams: UserParams){\n    this.userParams = userParams;\n  }\n\n  getUserParams(): UserParams{\n    return this.userParams;\n  }\n\n  resetUserParams(){\n    this.userParams = new UserParams(this.user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\nimport { getAttrsForDirectiveMatching } from '@angular/compiler/src/render3/view/util';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n          switch(error.status){\n            case 400:\n              if(error.error.errors){\n                const validationErrors = [];\n                for(const key in error.error.errors){\n                  validationErrors.push(error.error.errors[key]);\n                }\n                throw validationErrors.flat();\n              }else{\n                this.toastr.error(error.error);\n              }\n              break;\n            case 401:\n              console.log(error);\n              this.toastr.error((error.error) ? error.error : \"Unauthorized\", error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl(\"/not-found\");\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl(\"/server-error\", navigationExtras);\n              break;\n            default:\n              this.toastr.error(\"Something unexpected went wrong\");\n              console.log(error);\n              break;\n          }        \n\n        console.log(error);\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { GenericParams } from \"./generic-params\";\r\n\r\nexport class MessageParams extends GenericParams{\r\n    messageId: string;\r\n    username: string;\r\n    container: string = \"inbox\";\r\n\r\n    constructor(){\r\n        super();        \r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  url = environment.apiRoute;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserWithRoles(){\n    return this.httpClient.get<User[]>(this.url + \"admin/users-with-roles\");\n  }\n\n  editRoles(userRole: Partial<User>){\n    let params = new HttpParams();\n    params = params.append('roles', userRole.role?.join(\",\"));\n    return this.httpClient.put<string[]>(this.url + \"admin/edit-roles/\" + userRole.userName, {}, {params: params});\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { MemberService } from 'src/app/_services/member.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceHubService } from 'src/app/_services/presence-hub.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('tabSetDetails', {static: true}) tabSetDetails: TabsetComponent;\n\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  tabSetActive: TabDirective;\n  messages: Message[];\n  firstTime: boolean = true;\n\n  constructor(private route: ActivatedRoute,\n    private messageService: MessageService,\n    public presenceService: PresenceHubService,\n    private memberService: MemberService,\n    private toastr: ToastrService,\n    private router: Router) {\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe(params => {\n      this.member = this.route.snapshot.data['member'];\n      if(params?.get(\"tab\") === \"3\")\n        this.selectTab(3);\n        this.galleryImages = this.getImages();\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '400px',\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      },\n    ]\n  }\n\n  getImages(): NgxGalleryImage[] {\n    let images: NgxGalleryImage[] = [];\n\n    for(const img of this.member.photos){\n      images.push({\n        small: img.url,\n        medium: img.url,\n        big: img.url,\n      })\n    }\n\n    return images;\n  }\n\n  selectTab(tabId: number) {\n    this.tabSetDetails.tabs[tabId].active = true;\n    if(tabId == 3 && this.firstTime){\n      this.loadMessageThread();\n      this.firstTime = false;\n    }\n  }\n\n  onSelect(data: TabDirective): void {\n    this.tabSetActive = data;\n    if(data.heading == \"Messages\" && this.firstTime){\n      this.loadMessageThread();\n      this.firstTime = false;\n    }\n  }\n\n  loadMessageThread(){\n    /*this.messageService.getMessageThread(this.member.userName).subscribe(res => {\n      this.messages = res;\n    })*/\n  }\n\n  addLike(username: string){\n    this.memberService.addLike(username).subscribe(() => {\n      this.toastr.success(\"Like added successfully\");\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n            <div class=\"card-body\">\n                <div>\n                    <span *ngIf=\"(presenceService.onlineUsers$ | async).includes(member.userName)\"\n                        class=\"user-online\">\n                        <i class=\"fa fa-user\"></i>\n                        <strong class=\"ml-2 lead\">Online</strong>\n                    </span>\n                    <span *ngIf=\"!(presenceService.onlineUsers$ | async).includes(member.userName)\"\n                        class=\"user-offline\">\n                        <i class=\"fa fa-user-times\"></i>\n                        <strong class=\"ml-2 lead\">Offline</strong>\n                    </span>\n                </div>\n                <div class=\"mt-2\">\n                    <strong>Location:</strong>\n                    <p class=\"card-text\">{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p class=\"card-text\">{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last active:</strong>\n                    <p class=\"card-text\">{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p class=\"card-text\">{{member.created | date:'d LLL yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"container\">\n                    <div class=\"row justify-content-around\">\n                        <button class=\"btn btn-secondary col-5\" (click)=\"addLike(member.userName)\">Like</button>\n                        <button class=\"btn btn-primary col-5\" (click)=\"selectTab(3)\">Message</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\" #tabSetDetails>\n            <tab heading=\"About {{member.knownAs}}\" (selectTab)=\"onSelect($event)\">\n                <h4>Description</h4>\n                <p>{{member.introduction}}</p>\n                <h4>Looking for</h4>\n                <p>{{member.lookingFor}}</p>\n            </tab>\n            <tab heading=\"Interests\" (selectTab)=\"onSelect($event)\">\n                <h4>Interests</h4>\n                <p>{{member.interests}}</p>\n            </tab>\n            <tab heading=\"Photos\" (selectTab)=\"onSelect($event)\">\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"\n                    style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\n            </tab>\n            <tab heading=\"Messages\" (selectTab)=\"onSelect($event)\" #tabMessages=\"tab\">\n                <app-member-messages [recipientUsername]=\"member.userName\"\n                    *ngIf=\"tabMessages.active\">\n                    </app-member-messages>\n            </tab>\n        </tabset>\n    </div>\n</div>    \n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user) return true;\n        this.toastr.error(\"You shall not pass!\");\n      })\n    )  \n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { CreateMessage } from '../_models/create-message';\nimport { Message } from '../_models/message';\nimport { MessageParams } from '../_models/message-params';\nimport { PaginatedResult, PaginationHeader } from '../_models/pagination';\nimport { getPaginatedResult, getPaginationHeaders } from './pagination-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  url = environment.apiRoute;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getMessages(messageParams: MessageParams){\n    let params = getPaginationHeaders(messageParams);\n    params = params.append('container', messageParams.container);\n    return getPaginatedResult<Message[]>(this.url + \"messages\", this.httpClient, params);\n  }\n\n  // CHANGED TO message-hub.service.ts\n  // getMessageThread(recipientUsername: string){\n  //   return this.httpClient.get<Message[]>(this.url + \"messages/thread/\" + recipientUsername);\n  // }\n\n  // sendMessage(createMessage: CreateMessage){\n  //   return this.httpClient.post<Message>(this.url + \"messages\", createMessage);\n  // }\n  \n  deleteMessage(messageParams: MessageParams){\n    let params = getPaginationHeaders(messageParams);\n    params = params.append('container', messageParams.container);\n    params = params.append('messageId', messageParams.messageId);\n    return this.httpClient.delete<Message[]>(this.url + \"messages\", { params: params, observe: 'response' }).pipe(\n      map(res => {\n        let pagination: PaginationHeader = JSON.parse(res.headers.get(\"X-Pagination\"));\n        const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n        paginatedResult.body = res.body;\n        paginatedResult.pagination = pagination;\n        return paginatedResult;\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { PaginationHeader } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/user-params';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MemberService } from 'src/app/_services/member.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  paginationHeader: PaginationHeader;\n  userParams: UserParams;\n  user: User;\n  filterForm: FormGroup;\n\n  constructor(private memberService: MemberService, private accountService: AccountService,\n      private fb: FormBuilder) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(res => this.user = res);\n  }\n\n  ngOnInit(): void {\n    let oldUserParams = this.memberService.getUserParams();\n    if (oldUserParams.currentUsername != this.user.userName) {\n      let newUserParams = new UserParams(this.user);\n      this.memberService.setUserParams(newUserParams);\n    }\n    this.userParams = this.memberService.getUserParams();\n    this.filterForm = this.fb.group({\n      minAge: [this.userParams.minAge, \n                [Validators.required\n                ,Validators.min(this.userParams.minAge)]],\n      maxAge: [this.userParams.maxAge,\n                [Validators.required\n                ,Validators.max(this.userParams.maxAge)]],\n      gender: [this.userParams.gender, Validators.required]\n    });\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(res => {\n      this.members = res.body;\n      this.userParams.pageNumber = res.pagination.pageNumber;\n      this.userParams.pageSize = res.pagination.pageSize;\n      this.paginationHeader = res.pagination;\n    }, err => {\n      console.log(err);\n    })\n  }\n\n  pageChanged(event: any): void {\n    this.userParams.pageNumber = event.page;\n    this.loadMembers();\n  }\n\n  submitFilter() {\n    this.userParams.minAge = this.filterForm.get(\"minAge\").value;\n    this.userParams.maxAge = this.filterForm.get(\"maxAge\").value;\n    this.userParams.gender = this.filterForm.get(\"gender\").value;\n    this.loadMembers();\n  }\n\n  resetFilter() {\n    this.memberService.resetUserParams();\n    this.userParams = this.memberService.getUserParams();\n    this.filterForm.reset(this.userParams);\n    this.loadMembers();\n  }\n}","<ng-container *ngIf=\"paginationHeader\">\n    <div class=\"row d-flex justify-content-center mt-2\">\n        <h2>Your matches - {{paginationHeader.totalCount}} found</h2>\n    </div>\n    <div class=\"row mt-2\">\n        <form [formGroup]='filterForm' class=\"col-9\">\n            <div class=\"form-inline\">\n                <app-number-input [formControl]=\"filterForm.controls['minAge']\" [label]=\"'Age from:'\"\n                    [style]=\"'width: 6em;'\"></app-number-input>\n                <app-number-input [formControl]=\"filterForm.controls['maxAge']\" [label]=\"'Age to:'\"\n                    [margin]=\"'ml-2'\" [style]=\"'width: 6em;'\"></app-number-input>\n                <div class=\"form-group\">\n                    <label class=\"lead ml-2\">Show:</label>\n                    <select formControlName=\"gender\" class=\"form-control ml-2\">\n                        <option value=\"both\">Both</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </select>\n                </div>\n                <div class=\"button-group ml-3\">\n                    <button type=\"submit\" class=\"btn btn-secondary mr-2\"\n                        [disabled]=\"this.filterForm.invalid\"\n                        (click)=\"submitFilter()\">Apply filters</button>\n                    <button type=\"submit\" class=\"btn btn-primary\" \n                        (click)=\"resetFilter()\">Reset filters</button>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"row mt-3\">\n        <button type=\"button\" class=\"btn btn-info\" style=\"margin-left: 15px;\"\n            [(ngModel)]=\"userParams.orderBy\"\n            btnRadio=\"lastActive\"\n            (click)=\"loadMembers()\">Last Active</button>\n        <button type=\"button\" class=\"btn btn-info ml-2\"\n            [(ngModel)]=\"userParams.orderBy\"\n            btnRadio=\"created\"\n            (click)=\"loadMembers()\">Newest members</button>\n    </div>\n    <div class=\"row d-flex justify-content-center mt-4\">\n        <div *ngFor=\"let member of members\" class=\"col-3\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col d-flex justify-content-center\">\n            <pagination \n                [totalItems]=\"paginationHeader.totalCount\" \n                [itemsPerPage]=\"paginationHeader.pageSize\"\n                [(ngModel)]=\"paginationHeader.pageNumber\"\n                (pageChanged)=\"pageChanged($event)\"></pagination>\n        </div>\n    </div>\n</ng-container>\n","export class CreateMessage{\r\n    recipientUsername: string;\r\n    content: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AccountService } from './_services/account.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser(){\n    const user: User = JSON.parse(localStorage.getItem(\"user\"));\n    if(user)\n      this.accountService.setCurrentUser(user);\n  }\n}\n","<ngx-spinner>\r\n  <h3>Loading...</h3>\r\n</ngx-spinner>\r\n<app-nav></app-nav>\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { delay, finalize } from 'rxjs/operators';\nimport { BusyService } from '../_services/busy.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  countLoadingAnimation = 0;\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.showLoadingAnimation();\n    return next.handle(request).pipe(\n      delay(1000),\n      finalize(() => this.busyService.hideLoadingAnimation())\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DatepickerInputComponent } from './_forms/datepicker-input/datepicker-input.component';\nimport { NumberInputComponent } from './_forms/number-input/number-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminUserManagementComponent } from './admin/admin-user-management/admin-user-management.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminEditRolesComponent } from './_modals/admin-edit-roles/admin-edit-roles.component';\nimport { ShowAdminPanelDirective } from './_directives/show-admin-panel.directive';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DatepickerInputComponent,\n    NumberInputComponent,\n    MemberMessagesComponent,\n    AdminUserManagementComponent,\n    AdminPanelComponent,\n    AdminEditRolesComponent,\n    ShowAdminPanelDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/Photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MemberService } from 'src/app/_services/member.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver: boolean = false;\n  user: User;\n\n  constructor(private accountService: AccountService, private memberService: MemberService,\n    private toastr: ToastrService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(res => this.user = res);\n    this.initializeUploader();    \n  }\n\n  ngOnInit(): void {\n  }\n\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: environment.apiRoute + \"users/add-photo\",\n      authToken: \"Bearer \" + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10*1024*1024,\n      itemAlias: 'Img',\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    }\n\n    this.uploader.onSuccessItem = (file, res, status, headers) => {\n      if(res){\n        const photoResult: Photo = JSON.parse(res);\n        this.member.photos.push(photoResult);\n\n        if (photoResult.isMain){\n          this.user.photoUrl = photoResult.url;\n          this.accountService.setCurrentUser(this.user);\n          this.member.photoUrl = photoResult.url;\n        }\n      }\n    }\n  }\n\n  fileOverBase(e:any):void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photoId: number){\n    this.memberService.setMainPhoto(photoId).subscribe((photoResult: Photo) => {\n      this.user.photoUrl = photoResult.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photoResult.url;\n      this.member.photos.find(p => p.isMain).isMain = false;\n      this.member.photos.find(p => p.id == photoId).isMain = true;\n      this.toastr.success(\"Main photo has been changed successfully\");\n    });\n  }\n\n  deletePhoto(photoId: number){\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n        const photo = this.member.photos.findIndex(p => p.id == photoId);\n        this.member.photos.splice(photo, 1);\n        this.toastr.success(\"Photo has been removed successfully\");\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url || './assets/user.png'}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n        <div class=\"btn-group p-1\">\n            <button id=\"mainButton\" class=\"btn btn-sm\" \n                [class]=\"photo.isMain ? 'btn-success' : 'btn-light'\" \n                (click)=\"setMainPhoto(photo.id)\"\n                [disabled]=\"photo.isMain\">Main</button>\n            <button id=\"deleteButton\" class=\"btn btn-sm btn-secondary\" \n                (click)=\"deletePhoto(photo.id)\">\n                <i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<!-- ANGULAR FILE UPLOAD -->\n<div class=\"row mt-5\">\n \n    <div class=\"col-md-4\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n             <i class=\"fa fa-upload fa-3x\"></i>\n             Base drop zone\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-8 queue\" style=\"margin-bottom: 40px\" *ngIf=\"uploader.queue.length >= 1\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"glyphicon glyphicon-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"glyphicon glyphicon-ban-circle\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"glyphicon glyphicon-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MemberService } from \"../_services/member.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member>{\r\n\r\n    constructor(private memberService: MemberService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get(\"username\"));\r\n    }\r\n}","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: string = \"text\";\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n}\n","<div class=\"form-group\"> \n    <label class=\"lead\">{{label}}</label>\n    <input \n    [formControl]=\"ngControl.control\"\n    type=\"{{type}}\" \n    class=\"form-control\" \n    placeholder=\"{{label}}\"\n    required\n    [autofocus]=\"label == 'Username'\"\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\">\n    <div class=\"invalid-feedback text-left\" *ngIf=\"ngControl.errors?.required && ngControl.touched\">\n        <p>{{label}} is required</p>\n    </div>\n    <div class=\"invalid-feedback text-left\" *ngIf=\"ngControl.errors?.minlength && ngControl.touched\">\n        <p>{{label}} must be 4 characters at least</p>\n    </div>\n    <div class=\"invalid-feedback text-left\" *ngIf=\"ngControl.errors?.maxlength && ngControl.touched\">\n        <p>{{label}} can be 8 characters at most</p>\n    </div>\n    <div class=\"invalid-feedback text-left\" *ngIf=\"ngControl.errors?.matchPassword\">\n        <p>Confirm password doesn't match password field</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LikeParams } from '../_models/like-params';\nimport { Member } from '../_models/member';\nimport { PaginationHeader } from '../_models/pagination';\nimport { MemberService } from '../_services/member.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  likeMembers: Partial<Member[]>;\n  likeParams: LikeParams;\n  paginationHeader: PaginationHeader;\n\n  constructor(private memberService: MemberService) { }\n\n  ngOnInit(): void {\n    this.likeParams = new LikeParams();\n    this.getUserLikes();\n  }\n\n  getUserLikes(){\n    this.memberService.getUserLikes(this.likeParams).subscribe(res => {\n      this.likeMembers = res.body;\n      this.likeParams.pageNumber = res.pagination.pageNumber;\n      this.likeParams.pageSize = res.pagination.pageSize;\n      this.paginationHeader = res.pagination;\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  pageChanged(event: any){\n    this.likeParams.pageNumber = event.page;\n    this.getUserLikes();\n  }\n}\n","<ng-container *ngIf=\"paginationHeader\">\n    <div class=\"row d-flex justify-content-center mt-2\">\n        <h2 *ngIf=\"likeParams.predicate == 'liked'\">Members who I like</h2>\n        <h2 *ngIf=\"likeParams.predicate == 'likedBy'\">Members who like me</h2>\n    </div>\n    <div class=\"row mt-2\">\n        <button type=\"button\" class=\"btn btn-info\" style=\"margin-left: 15px;\"\n                [(ngModel)]=\"likeParams.predicate\"\n                btnRadio=\"liked\"\n                (click)=\"getUserLikes()\">Members I like</button>\n            <button type=\"button\" class=\"btn btn-info ml-2\"\n                [(ngModel)]=\"likeParams.predicate\"\n                btnRadio=\"likedBy\"\n                (click)=\"getUserLikes()\">Members who like me</button>\n    </div>\n    <div class=\"row d-flex justify-content-center mt-4\">\n        <div *ngFor=\"let likeMember of likeMembers\" class=\"col-3\">\n            <app-member-card [member]=\"likeMember\"></app-member-card>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col d-flex justify-content-center\">\n            <pagination \n                [totalItems]=\"paginationHeader.totalCount\" \n                [itemsPerPage]=\"paginationHeader.pageSize\"\n                [(ngModel)]=\"paginationHeader.pageNumber\"\n                (pageChanged)=\"pageChanged($event)\"></pagination>\n        </div>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n\n  constructor(public accountService: AccountService, \n    private route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.accountService.login(this.model).subscribe((res => {\n      this.route.navigateByUrl(\"/members\");\n    }), err => {\n      //this.toastr.error(err.error);\n      console.log(err);\n    });\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.route.navigateByUrl(\"/\");\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-secondary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" routerLinkActive=\"active\">Dating App</a>\n\n    <ul class=\"navbar-nav mr-auto\">\n      <ng-container *ngIf=\"this.accountService.currentUser$ | async as currentUser\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\">Matches</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\">Lists</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\">Messages</a>\n        </li>\n        <li class=\"nav-item\" *appShowAdminPanel=\"currentUser\">\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n        </li>\n      </ng-container>\n      <!-- <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\">Errors</a>\n      </li> -->\n    </ul>\n    \n    <div class=\"dropdown\" *ngIf=\"this.accountService.currentUser$ | async as currentUser\" dropdown>\n      <img id=\"mainPhoto\" src=\"{{currentUser.photoUrl || './assets/user.png'}}\" alt=\"{{currentUser.photoUrl}}\" class=\"img-thumbnail p-0 mr-2 rounded-0\">\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{currentUser.userName | titlecase}}</a>\n      <div class=\"dropdown-menu\" *dropdownMenu>\n        <a class=\"dropdown-item\" routerLink=\"/member/edit/{{currentUser.userName}}\">Edit</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n\n    <form #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\" (ngSubmit)=\"login()\" autocomplete=\"off\" \n      *ngIf=\"(this.accountService.currentUser$ | async) === null\">\n      <input\n          name=\"username\"\n          [(ngModel)]=\"model.username\" \n          class=\"form-control mr-sm-2\" \n          type=\"text\" \n          placeholder=\"Username\" \n          aria-label=\"Username\">\n      <input\n        name=\"password\"\n        [(ngModel)]=\"model.password\" \n        class=\"form-control mr-sm-2\" \n        type=\"password\" \n        placeholder=\"Password\" \n        aria-label=\"Password\">\n      <button class=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n  </div>\n</nav>","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MemberService } from 'src/app/_services/member.service';\nimport { PresenceHubService } from 'src/app/_services/presence-hub.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(private memberService: MemberService, \n    private toastr: ToastrService,\n    public presenceService: PresenceHubService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  addLike(username: string){\n    this.memberService.addLike(username).subscribe(() => {\n      this.toastr.success(\"Like added successfully\");\n    })\n  }\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img class=\"card-img-top\" src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\">\n        <ul class=\"list-inline text-center member-icons\">\n          <li class=\"list-inline-item\">\n            <button class=\"btn btn-secondary\" routerLink=\"/members/{{member.userName}}\">\n              <i class=\"fa fa-user\"></i>\n            </button>\n          </li>\n          <li class=\"list-inline-item\">\n            <button class=\"btn btn-secondary\" (click)=\"addLike(member.userName)\">\n              <i class=\"fa fa-heart\"></i>\n            </button>\n          </li>\n          <li class=\"list-inline-item\">\n            <button class=\"btn btn-secondary\"\n              routerLink=\"/members/{{member.userName}}\"\n              [queryParams]=\"{tab: 3}\">\n              <i class=\"fa fa-envelope\"></i>\n            </button>\n          </li>\n        </ul>\n    </div>\n    <div class=\"card-body p-2\">\n      <h6 class=\"card-title text-center\">\n        <i class=\"fa fa-user mr-2\"\n          [ngClass]=\"{'user-online': (presenceService.onlineUsers$ | async).includes(member.userName)}\"></i>\n        {{member.knownAs + \", \" + member.age}}\n      </h6>\n      <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>","import { Directive, HostBinding, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { User } from '../_models/user';\n\n@Directive({\n  selector: '[appShowAdminPanel]'\n})\nexport class ShowAdminPanelDirective {\n\n  constructor(private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) { }\n\n  @Input() set appShowAdminPanel(userRoles: Partial<User>) {\n    if(userRoles.role?.includes(\"admin\") || userRoles.role?.includes(\"moderator\")){\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<tabset>\n    <tab heading=\"User management\">\n        <app-admin-user-management></app-admin-user-management>\n    </tab>\n    <!--<tab heading=\"Photo management\">Photo management</tab>-->\n</tabset>","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { AccountService } from './account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageHubService {\n  url = environment.hubRoute;\n  user: User;\n\n  public hubConnection: HubConnection;\n  private messageSource = new BehaviorSubject<Message[]>([]);\n  message$ = this.messageSource.asObservable();\n\n  constructor(private accountService: AccountService) {\n  }\n\n  onCreateHubConnection(recipientUsername: string){\n    this.getUser();\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"message?user=\" + recipientUsername, {accessTokenFactory: () => { return this.user.token }})\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection\n      .start()\n      .catch(err => console.log(err));\n\n    this.hubConnection\n      .on(\"GetMessageThread\", (res: Message[]) => {\n        this.messageSource.next(res);\n      });\n    \n    this.hubConnection\n      .on(\"GetNewMessage\", (res: Message) => {\n        let currentMessages = this.messageSource.getValue();\n        currentMessages.push(res);\n        this.messageSource.next(currentMessages);\n      });\n  }\n\n  onStopHubConnection(){\n    this.hubConnection\n      .stop()\n      .catch(err => console.log(err))\n      .finally(() => this.removeUser());\n  }\n\n  private getUser = () => {\n    this.accountService.currentUser$.pipe(take(1))\n    .subscribe((res) => this.user = res);\n  };\n\n  private removeUser = () => {\n    this.user = undefined;\n  };\n}\n","import { Component, EventEmitter, OnInit, Output, TemplateRef } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-admin-edit-roles',\n  templateUrl: './admin-edit-roles.component.html',\n  styleUrls: ['./admin-edit-roles.component.css']\n})\nexport class AdminEditRolesComponent implements OnInit {\n  userRole: Partial<User>;\n  @Output() closeModalUserRole = new EventEmitter<Partial<User>>();\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  onChangeRole(role: string){\n    if(this.userRole.role?.find(r => r == role) == null){\n      this.userRole.role.push(role);\n    }else{\n      this.userRole.role = this.userRole.role.filter(r => r !== role);\n    }\n  }\n\n  onCloseModal(){\n    this.closeModalUserRole.emit(this.userRole);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{userRole.userName | titlecase}}</h4>\n</div>\n<div class=\"modal-body\">\n    <ul>\n        <li>\n            <input class=\"form-check-input\" type=\"checkbox\" \n                [checked]=\"this.userRole.role?.includes('admin')\"\n                (change)=\"onChangeRole('admin')\">\n            <label class=\"form-check-label\">\n                Admin\n            </label>\n        </li>\n        <li>\n            <input class=\"form-check-input\" type=\"checkbox\"\n                [checked]=\"this.userRole.role?.includes('moderator')\"\n                (change)=\"onChangeRole('moderator')\">\n            <label class=\"form-check-label\">\n                Moderator\n            </label>\n        </li>\n        <li>\n            <input class=\"form-check-input\" type=\"checkbox\"\n                [checked]=\"this.userRole.role?.includes('member')\"\n                (change)=\"onChangeRole('member')\">\n            <label class=\"form-check-label\">\n                Member\n            </label>\n        </li>\n    </ul>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"this.bsModalRef.hide()\">Close</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"this.onCloseModal()\">Submit</button>\n</div>\n\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MemberService } from 'src/app/_services/member.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  @HostListener('window:beforeunload', ['$event'])\n    onWindowClose($event){\n      if(this.editForm.dirty){\n        $event.returnValue = false;\n      }\n    }\n  member: Member;\n  user: User;\n\n  constructor(private memberService: MemberService, private route: ActivatedRoute, \n    private toastr: ToastrService, public accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(res => this.user = res);\n    }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember(){\n    this.memberService.getMember(this.user.userName).subscribe(res => this.member = res);\n  }\n\n  submitEditForm(){\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.editForm.reset(this.member);\n      this.toastr.success(\"Profile updated successfully\");\n    });\n  }\n}\n","<ng-container *ngIf=\"member\">\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <h1>Your profile</h1>\n        </div>\n        <div class=\"col-8\" *ngIf=\"editForm.dirty\">\n            <div class=\"alert alert-info\" role=\"alert\">\n                <strong>Information: </strong>You have made changes. Any unsaved changes will be lost.\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <div class=\"card\">\n                <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.photoUrl}}\" class=\"card-img-top\">\n                <div class=\"card-body\">\n                    <div>\n                        <strong>Description:</strong>\n                        <p class=\"card-text\">{{member.city}}, {{member.country}}</p>\n                    </div>\n                    <div>\n                        <strong>Age:</strong>\n                        <p class=\"card-text\">{{member.age}}</p>\n                    </div>\n                    <div>\n                        <strong>Last active:</strong>\n                        <p class=\"card-text\">{{member.lastActive | timeago}}</p>\n                    </div>\n                    <div>\n                        <strong>Member since:</strong>\n                        <p class=\"card-text\">{{member.created | date:'d LLL yyyy'}}</p>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"container\">\n                        <div class=\"row justify-content-around\">\n                            <button class=\"btn btn-primary col-12\" [disabled]=\"!editForm.dirty\" form=\"editForm\">Save changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-8\">\n            <tabset class=\"member-tabset\">\n                <tab heading=\"About {{member.knownAs}}\">\n                    <h4>Description</h4>\n                    <form #editForm=\"ngForm\" id=\"editForm\" (submit)=\"submitEditForm()\">\n                        <textarea [(ngModel)]=\"member.introduction\" name=\"introduction\" class=\"form-control\" rows=\"6\"></textarea>\n                        <h4 class=\"mt-4\">Looking for</h4>\n                        <textarea [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" class=\"form-control\" rows=\"6\"></textarea>\n                        <h4 class=\"mt-4\">Interests</h4>\n                        <textarea [(ngModel)]=\"member.interests\" name=\"interests\" class=\"form-control\" rows=\"6\"></textarea>\n                        <h4 class=\"mt-4\">Location details</h4>\n                        <div class=\"form-inline\">\n                            <label class=\"mr-3\">City:</label>\n                            <input type=\"text\" class=\"form-control mr-3\" [(ngModel)]=\"member.city\" name=\"city\">\n                            <label class=\"mr-3\">Country:</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"member.country\" name=\"country\">\n                        </div>\n                    </form>\n                </tab>\n                <tab heading=\"Edit photos\">\n                    <app-photo-editor [member]=\"this.member\"></app-photo-editor>\n                </tab>\n            </tabset>\n        </div>\n    </div>    \n</ng-container>\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { GenericParams } from \"../_models/generic-params\";\r\nimport { Member } from \"../_models/member\";\r\nimport { PaginatedResult, PaginationHeader } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url: string, httpClient: HttpClient, params: HttpParams)\r\n  : Observable<PaginatedResult<T>>{\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return httpClient.get<Member[]>(url, { params: params, observe: 'response' }).pipe(\r\n        map(res => {\r\n          let pagination: PaginationHeader = JSON.parse(res.headers.get(\"X-Pagination\"));\r\n          paginatedResult.body = <T><unknown>res.body;\r\n          paginatedResult.pagination = pagination;\r\n          return paginatedResult;\r\n        })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(genericParams: GenericParams): HttpParams{\r\n  let params = new HttpParams();\r\n\r\n  if (genericParams.pageNumber !== undefined && genericParams.pageSize !== undefined){\r\n    params = params.append('pageNumber', genericParams.pageNumber.toString());\r\n    params = params.append('pageSize', genericParams.pageSize.toString());\r\n  }\r\n  \r\n  return params;\r\n}\r\n\r\n","import { GenericParams } from \"./generic-params\";\r\n\r\nexport class LikeParams extends GenericParams {\r\n    predicate: string = \"liked\";\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  canDeactivate(component: MemberEditComponent): boolean {\n    if(component.editForm.dirty){\n      return confirm(\"Are you sure you want to continue? Any unsaved changes will be lost\");\n    }\n\n    return true;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventAccessAdminPanelGuard } from './_guards/prevent-access-admin-panel.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit/:username', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\n      {path: 'lists', component: ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component: AdminPanelComponent, canActivate: [PreventAccessAdminPanelGuard]}\n    ]\n  },\n  {path: \"errors\", component: TestErrorsComponent},\n  {path: \"not-found\", component: NotFoundComponent},\n  {path: \"server-error\", component: ServerErrorComponent},\n  {path: '**', component: HomeComponent, pathMatch: \"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable, OnInit } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventAccessAdminPanelGuard implements CanActivate {\n  constructor(private accountService: AccountService,\n    private toastr: ToastrService) {}\n\n  canActivate(): boolean {\n    let user: User;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(res => user = res);\n    if(user.role?.includes(\"admin\") || user.role?.includes(\"moderator\")){\n      return true;\n    }\n\n    this.toastr.error(\"You don't have grants to access this\");\n    return false;\n  }\n  \n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}